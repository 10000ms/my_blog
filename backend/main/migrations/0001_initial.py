# Generated by Django 2.1.7 on 2019-04-02 08:05

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=30, verbose_name='电话号码')),
                ('is_author', models.BooleanField(default=False, verbose_name='是否是作者')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='标题')),
                ('author', models.CharField(max_length=256, verbose_name='作者')),
                ('create_time', models.DateTimeField(verbose_name='创建时间')),
                ('last_change_time', models.DateTimeField(auto_now_add=True, verbose_name='最后修改')),
                ('brief', models.CharField(max_length=256, verbose_name='简介')),
                ('content', models.TextField(verbose_name='正文')),
                ('read_count', models.IntegerField(verbose_name='阅读数')),
                ('like_count', models.IntegerField(verbose_name='喜欢数')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='分类')),
                ('father_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', models.TextField(verbose_name='关于我页面内容')),
                ('website_name', models.CharField(max_length=10, verbose_name='网站名')),
                ('ICP_number', models.CharField(max_length=20, verbose_name='备案号')),
                ('website_image', models.CharField(max_length=256, verbose_name='网站头像')),
                ('ad_1', models.CharField(max_length=256, verbose_name='主页侧栏图片1')),
                ('ad_2', models.CharField(max_length=256, verbose_name='主页侧栏图片2')),
                ('github', models.CharField(max_length=256, verbose_name='Github地址')),
                ('email', models.CharField(max_length=256, verbose_name='邮箱地址')),
                ('Friendship_link', models.CharField(max_length=2000, verbose_name='友情链接地址')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tabs',
            field=models.ManyToManyField(to='main.Tab'),
        ),
    ]
