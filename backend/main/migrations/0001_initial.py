# Generated by Django 2.2 on 2019-05-20 09:20

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.manager.user
import main.middleware.current_user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=30, unique=True, verbose_name='电话号码')),
                ('profile', models.URLField(default='', verbose_name='头像')),
                ('is_author', models.BooleanField(default=False, verbose_name='是否是作者')),
                ('is_demo_user', models.BooleanField(default=False, verbose_name='是否是使用用户')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
            },
            managers=[
                ('objects', main.manager.user.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='标题')),
                ('author', models.CharField(max_length=256, verbose_name='作者')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_change_time', models.DateTimeField(auto_now=True, verbose_name='最后修改')),
                ('brief', models.CharField(max_length=256, verbose_name='简介')),
                ('content', models.TextField(verbose_name='正文')),
                ('read_count', models.IntegerField(default=0, verbose_name='阅读数')),
                ('like_count', models.IntegerField(default=0, verbose_name='喜欢数')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否推荐')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='DateRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True, verbose_name='日期')),
                ('read_count', models.IntegerField(default=0, verbose_name='阅读统计')),
                ('like_count', models.IntegerField(default=0, verbose_name='喜爱统计')),
                ('comment_count', models.IntegerField(default=0, verbose_name='评论统计')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=10, verbose_name='省份')),
                ('city', models.CharField(max_length=20, verbose_name='城市')),
                ('city_id', models.IntegerField(default=0, verbose_name='city_id')),
                ('lat', models.FloatField(default=0.0, verbose_name='纬度值')),
                ('lng', models.FloatField(default=0.0, verbose_name='经度值')),
            ],
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='标签')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', models.TextField(verbose_name='关于我页面内容')),
                ('website_name', models.CharField(max_length=10, verbose_name='网站名')),
                ('ICP_number', models.CharField(max_length=20, verbose_name='备案号')),
                ('website_image', models.CharField(max_length=256, verbose_name='网站头像')),
                ('ad_1', models.URLField(verbose_name='主页侧栏图片1')),
                ('ad_1_url', models.URLField(verbose_name='主页侧栏图片1广告url')),
                ('ad_2', models.URLField(verbose_name='主页侧栏图片2')),
                ('ad_2_url', models.URLField(verbose_name='主页侧栏图片2广告url')),
                ('github', models.URLField(verbose_name='Github地址')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱地址')),
                ('friendship_link', models.CharField(max_length=2000, verbose_name='友情链接地址')),
                ('open_register', models.BooleanField(default=False, verbose_name='是否开放注册')),
                ('demo_model', models.BooleanField(default=False, verbose_name='是否开放demo模式')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RegionRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True, verbose_name='日期')),
                ('count', models.IntegerField(default=0, verbose_name='统计')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='标题')),
                ('content', models.TextField(verbose_name='评论')),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Blog')),
                ('creator', models.ForeignKey(blank=True, default=main.middleware.current_user.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='分类')),
                ('father_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.Category')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='creator',
            field=models.ForeignKey(blank=True, default=main.middleware.current_user.get_current_user, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blog',
            name='tabs',
            field=models.ManyToManyField(to='main.Tab'),
        ),
    ]
